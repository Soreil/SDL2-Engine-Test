

- Figure out movement issue [-]
  -- It's an issue with DT calculation, OF COURSE

- Implement other states [x] (Solved for now, I Implemented a playing state which will be enough.)

- Implement a timer class ( Timer is implemented, seems to be working)

- Test collisions implementation

- Test Collision resolution
  --Error:  getCollisionArea return junk numbers from improper calculations
  
- Implement SAT-based Collisions
  -- SAT collisions are working on the x-axis. 

- clean up some SAT implementations, gut Collider class of useless stuff

- Finish resourceManager {
  Load batched textures for efficent rendering
}

- Rework sprites to hold location of textures on an batched atlas

>>>YOU ARE HERE

- Find a way to unify constructors of entity creation, it's a mess right now
       (It's not that bad, just keep some basic structure to it pls)
       
- Create an intuitive option to wrap collider to texture  ( Func inside Entity class )


- Create a map class

Maps will be their own class, and contain mostly data
Map will be passed to an entity manager for a spawnMapEntities(Map* map) function
entityManager will do broad phase / narrow phase checks (player against all colliders / players around near col.) 



- Create a map format/ and or data format + parser


- Generalized serialization  (for map data to start but if I just implement full serialization here it will
  	      		      save me headaches later (Me thinks)
			      )


- In game states? (Sub-states inside PlayingState)

- Maybe do some drawing up of the shops

